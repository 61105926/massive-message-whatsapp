# Dockerfile de debug - más simple y con más logs
FROM node:20-alpine AS builder

WORKDIR /app

# Debug: Mostrar versiones
RUN echo "Node version:" && node --version
RUN echo "NPM version:" && npm --version

COPY package*.json ./
RUN npm ci

COPY . .
RUN npm run build

# Debug: Verificar archivos de build
RUN echo "=== BUILD OUTPUT ===" && ls -la dist/

# Etapa simple de nginx
FROM nginx:alpine

# Debug: Mostrar información del sistema
RUN echo "=== NGINX VERSION ===" && nginx -v

# Instalar herramientas de debug
RUN apk add --no-cache wget curl

# Copiar archivos
COPY --from=builder /app/dist /usr/share/nginx/html

# Debug: Verificar archivos copiados
RUN echo "=== FILES COPIED ===" && ls -la /usr/share/nginx/html/

# Usar configuración simple de nginx
COPY nginx-simple.conf /etc/nginx/conf.d/default.conf

# Debug: Mostrar configuración
RUN echo "=== NGINX CONFIG ===" && cat /etc/nginx/conf.d/default.conf

# Verificar configuración
RUN nginx -t

EXPOSE 82

# Sin healthcheck para debug
CMD ["sh", "-c", "echo 'Starting nginx on port 82...' && nginx -g 'daemon off;'"]